{"ast":null,"code":"import _asyncToGenerator from \"/Users/erisveltonlima/Desktop/Projetos 2023/criancaFeliz2023/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = win => {\n  const defaultPlatformMap = new Map();\n  defaultPlatformMap.set('web', {\n    name: 'web'\n  });\n  const capPlatforms = win.CapacitorPlatforms || {\n    currentPlatform: {\n      name: 'web'\n    },\n    platforms: defaultPlatformMap\n  };\n  const addPlatform = (name, platform) => {\n    capPlatforms.platforms.set(name, platform);\n  };\n  const setPlatform = name => {\n    if (capPlatforms.platforms.has(name)) {\n      capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n    }\n  };\n  capPlatforms.addPlatform = addPlatform;\n  capPlatforms.setPlatform = setPlatform;\n  return capPlatforms;\n};\nconst initPlatforms = win => win.CapacitorPlatforms = createCapacitorPlatforms(win);\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst CapacitorPlatforms = /*#__PURE__*/initPlatforms(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst setPlatform = CapacitorPlatforms.setPlatform;\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n  var _a;\n  const config = webPlugin.config;\n  const Plugins = cap.Plugins;\n  if (!config || !config.name) {\n    // TODO: add link to upgrade guide\n    throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n  }\n  // TODO: add link to upgrade guide\n  console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n  if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n    // Add the web plugin into the plugins registry if there already isn't\n    // an existing one. If it doesn't already exist, that means\n    // there's no existing native implementation for it.\n    // - OR -\n    // If we already have a plugin registered (meaning it was defined in the native layer),\n    // then we should only overwrite it if the corresponding web plugin activates on\n    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n    Plugins[config.name] = webPlugin;\n  }\n};\nvar ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n  constructor(message, code, data) {\n    super(message);\n    this.message = message;\n    this.code = code;\n    this.data = data;\n  }\n}\nconst getPlatformId = win => {\n  var _a, _b;\n  if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n    return 'android';\n  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n    return 'ios';\n  } else {\n    return 'web';\n  }\n};\nconst createCapacitor = win => {\n  var _a, _b, _c, _d, _e;\n  const capCustomPlatform = win.CapacitorCustomPlatform || null;\n  const cap = win.Capacitor || {};\n  const Plugins = cap.Plugins = cap.Plugins || {};\n  /**\n   * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n   */\n  const capPlatforms = win.CapacitorPlatforms;\n  const defaultGetPlatform = () => {\n    return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);\n  };\n  const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n  const defaultIsNativePlatform = () => getPlatform() !== 'web';\n  const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n  const defaultIsPluginAvailable = pluginName => {\n    const plugin = registeredPlugins.get(pluginName);\n    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n      // JS implementation available for the current platform.\n      return true;\n    }\n    if (getPluginHeader(pluginName)) {\n      // Native implementation available.\n      return true;\n    }\n    return false;\n  };\n  const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;\n  const defaultGetPluginHeader = pluginName => {\n    var _a;\n    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);\n  };\n  const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n  const handleError = err => win.console.error(err);\n  const pluginMethodNoop = (_target, prop, pluginName) => {\n    return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n  };\n  const registeredPlugins = new Map();\n  const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n    const registeredPlugin = registeredPlugins.get(pluginName);\n    if (registeredPlugin) {\n      console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n      return registeredPlugin.proxy;\n    }\n    const platform = getPlatform();\n    const pluginHeader = getPluginHeader(pluginName);\n    let jsImplementation;\n    const loadPluginImplementation = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* () {\n        if (!jsImplementation && platform in jsImplementations) {\n          jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = yield jsImplementations[platform]() : jsImplementation = jsImplementations[platform];\n        } else if (capCustomPlatform !== null && !jsImplementation && 'web' in jsImplementations) {\n          jsImplementation = typeof jsImplementations['web'] === 'function' ? jsImplementation = yield jsImplementations['web']() : jsImplementation = jsImplementations['web'];\n        }\n        return jsImplementation;\n      });\n      return function loadPluginImplementation() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    const createPluginMethod = (impl, prop) => {\n      var _a, _b;\n      if (pluginHeader) {\n        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n        if (methodHeader) {\n          if (methodHeader.rtype === 'promise') {\n            return options => cap.nativePromise(pluginName, prop.toString(), options);\n          } else {\n            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n          }\n        } else if (impl) {\n          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n        }\n      } else if (impl) {\n        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n      } else {\n        throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n      }\n    };\n    const createPluginMethodWrapper = prop => {\n      let remove;\n      const wrapper = (...args) => {\n        const p = loadPluginImplementation().then(impl => {\n          const fn = createPluginMethod(impl, prop);\n          if (fn) {\n            const p = fn(...args);\n            remove = p === null || p === void 0 ? void 0 : p.remove;\n            return p;\n          } else {\n            throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n          }\n        });\n        if (prop === 'addListener') {\n          p.remove = /*#__PURE__*/_asyncToGenerator(function* () {\n            return remove();\n          });\n        }\n        return p;\n      };\n      // Some flair âœ¨\n      wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n      Object.defineProperty(wrapper, 'name', {\n        value: prop,\n        writable: false,\n        configurable: false\n      });\n      return wrapper;\n    };\n    const addListener = createPluginMethodWrapper('addListener');\n    const removeListener = createPluginMethodWrapper('removeListener');\n    const addListenerNative = (eventName, callback) => {\n      const call = addListener({\n        eventName\n      }, callback);\n      const remove = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* () {\n          const callbackId = yield call;\n          removeListener({\n            eventName,\n            callbackId\n          }, callback);\n        });\n        return function remove() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n      const p = new Promise(resolve => call.then(() => resolve({\n        remove\n      })));\n      p.remove = /*#__PURE__*/_asyncToGenerator(function* () {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        yield remove();\n      });\n      return p;\n    };\n    const proxy = new Proxy({}, {\n      get(_, prop) {\n        switch (prop) {\n          // https://github.com/facebook/react/issues/20030\n          case '$$typeof':\n            return undefined;\n          case 'toJSON':\n            return () => ({});\n          case 'addListener':\n            return pluginHeader ? addListenerNative : addListener;\n          case 'removeListener':\n            return removeListener;\n          default:\n            return createPluginMethodWrapper(prop);\n        }\n      }\n    });\n    Plugins[pluginName] = proxy;\n    registeredPlugins.set(pluginName, {\n      name: pluginName,\n      proxy,\n      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])\n    });\n    return proxy;\n  };\n  const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n  // Add in convertFileSrc for web, it will already be available in native context\n  if (!cap.convertFileSrc) {\n    cap.convertFileSrc = filePath => filePath;\n  }\n  cap.getPlatform = getPlatform;\n  cap.handleError = handleError;\n  cap.isNativePlatform = isNativePlatform;\n  cap.isPluginAvailable = isPluginAvailable;\n  cap.pluginMethodNoop = pluginMethodNoop;\n  cap.registerPlugin = registerPlugin;\n  cap.Exception = CapacitorException;\n  cap.DEBUG = !!cap.DEBUG;\n  cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n  // Deprecated props\n  cap.platform = cap.getPlatform();\n  cap.isNative = cap.isNativePlatform();\n  return cap;\n};\nconst initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);\nconst Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = plugin => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n  constructor(config) {\n    this.listeners = {};\n    this.windowListeners = {};\n    if (config) {\n      // TODO: add link to upgrade guide\n      console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n      this.config = config;\n    }\n  }\n  addListener(eventName, listenerFunc) {\n    var _this = this;\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      this.listeners[eventName] = [];\n    }\n    this.listeners[eventName].push(listenerFunc);\n    // If we haven't added a window listener for this event and it requires one,\n    // go ahead and add it\n    const windowListener = this.windowListeners[eventName];\n    if (windowListener && !windowListener.registered) {\n      this.addWindowListener(windowListener);\n    }\n    const remove = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        return _this.removeListener(eventName, listenerFunc);\n      });\n      return function remove() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    const p = Promise.resolve({\n      remove\n    });\n    Object.defineProperty(p, 'remove', {\n      value: function () {\n        var _ref6 = _asyncToGenerator(function* () {\n          console.warn(`Using addListener() without 'await' is deprecated.`);\n          yield remove();\n        });\n        return function value() {\n          return _ref6.apply(this, arguments);\n        };\n      }()\n    });\n    return p;\n  }\n  removeAllListeners() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.listeners = {};\n      for (const listener in _this2.windowListeners) {\n        _this2.removeWindowListener(_this2.windowListeners[listener]);\n      }\n      _this2.windowListeners = {};\n    })();\n  }\n  notifyListeners(eventName, data) {\n    const listeners = this.listeners[eventName];\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n  hasListeners(eventName) {\n    return !!this.listeners[eventName].length;\n  }\n  registerWindowListener(windowEventName, pluginEventName) {\n    this.windowListeners[pluginEventName] = {\n      registered: false,\n      windowEventName,\n      pluginEventName,\n      handler: event => {\n        this.notifyListeners(pluginEventName, event);\n      }\n    };\n  }\n  unimplemented(msg = 'not implemented') {\n    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n  }\n  unavailable(msg = 'not available') {\n    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n  }\n  removeListener(eventName, listenerFunc) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const listeners = _this3.listeners[eventName];\n      if (!listeners) {\n        return;\n      }\n      const index = listeners.indexOf(listenerFunc);\n      _this3.listeners[eventName].splice(index, 1);\n      // If there are no more listeners for this type of event,\n      // remove the window listener\n      if (!_this3.listeners[eventName].length) {\n        _this3.removeWindowListener(_this3.windowListeners[eventName]);\n      }\n    })();\n  }\n  addWindowListener(handle) {\n    window.addEventListener(handle.windowEventName, handle.handler);\n    handle.registered = true;\n  }\n  removeWindowListener(handle) {\n    if (!handle) {\n      return;\n    }\n    window.removeEventListener(handle.windowEventName, handle.handler);\n    handle.registered = false;\n  }\n}\nconst WebView = /*#__PURE__*/registerPlugin('WebView');\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };","map":{"version":3,"names":["createCapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","CapacitorPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","initPlatforms","globalThis","self","window","global","legacyRegisterWebPlugin","cap","webPlugin","_a","config","Plugins","Error","console","warn","includes","getPlatform","ExceptionCode","CapacitorException","constructor","message","code","data","getPlatformId","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","_c","_d","_e","capCustomPlatform","CapacitorCustomPlatform","Capacitor","defaultGetPlatform","defaultIsNativePlatform","isNativePlatform","defaultIsPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","isPluginAvailable","defaultGetPluginHeader","PluginHeaders","find","h","handleError","err","error","pluginMethodNoop","_target","prop","Promise","reject","defaultRegisterPlugin","jsImplementations","registeredPlugin","proxy","pluginHeader","jsImplementation","loadPluginImplementation","createPluginMethod","impl","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","bind","Unimplemented","createPluginMethodWrapper","remove","wrapper","args","p","then","fn","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","resolve","Proxy","_","undefined","Set","keys","registerPlugin","convertFileSrc","filePath","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","registerWebPlugin","WebPlugin","listeners","windowListeners","listenerFunc","push","windowListener","registered","addWindowListener","removeAllListeners","listener","removeWindowListener","notifyListeners","forEach","hasListeners","length","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","WebView"],"sources":["/Users/erisveltonlima/Desktop/Projetos 2023/criancaFeliz2023/node_modules/@capacitor/core/dist/index.js"],"sourcesContent":["/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        this.data = data;\n    }\n}\nconst getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n\nconst createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair âœ¨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nconst initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n\nconst Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n\nconst WebView = /*#__PURE__*/ registerPlugin('WebView');\n\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}