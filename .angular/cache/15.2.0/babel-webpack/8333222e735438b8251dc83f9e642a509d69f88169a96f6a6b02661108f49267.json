{"ast":null,"code":"import _asyncToGenerator from \"/Users/erisveltonlima/Desktop/Projetos 2023/criancaFeliz2023/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nimport * as Cookie from './cookie';\nimport * as Request from './request';\nexport class HttpWeb extends WebPlugin {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    /**\n     * Perform an Http request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    this.request = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (options) {\n        return Request.request(options);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    /**\n     * Perform an Http GET request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    this.get = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (options) {\n        return Request.get(options);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    /**\n     * Perform an Http POST request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    this.post = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (options) {\n        return Request.post(options);\n      });\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    /**\n     * Perform an Http PUT request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    this.put = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (options) {\n        return Request.put(options);\n      });\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    /**\n     * Perform an Http PATCH request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    this.patch = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (options) {\n        return Request.patch(options);\n      });\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    /**\n     * Perform an Http DELETE request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    this.del = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (options) {\n        return Request.del(options);\n      });\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    /**\n     * Gets all HttpCookies as a Map\n     */\n    this.getCookiesMap = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(function* (\n      // @ts-ignore\n      options) {\n        const cookies = Cookie.getCookies();\n        const output = {};\n        for (const cookie of cookies) {\n          output[cookie.key] = cookie.value;\n        }\n        return output;\n      });\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    /**\n     * Get all HttpCookies as an object with the values as an HttpCookie[]\n     */\n    this.getCookies = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(function* (options) {\n        // @ts-ignore\n        const {\n          url\n        } = options;\n        const cookies = Cookie.getCookies();\n        return {\n          cookies\n        };\n      });\n      return function (_x8) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    /**\n     * Set a cookie\n     * @param key The key to set\n     * @param value The value to set\n     * @param options Optional additional parameters\n     */\n    this.setCookie = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator(function* (options) {\n        const {\n          key,\n          value,\n          expires = '',\n          path = ''\n        } = options;\n        Cookie.setCookie(key, value, {\n          expires,\n          path\n        });\n      });\n      return function (_x9) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    /**\n     * Gets all cookie values unless a key is specified, then return only that value\n     * @param key The key of the cookie value to get\n     */\n    this.getCookie = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator(function* (options) {\n        return Cookie.getCookie(options.key);\n      });\n      return function (_x10) {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n    /**\n     * Deletes a cookie given a key\n     * @param key The key of the cookie to delete\n     */\n    this.deleteCookie = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator(function* (options) {\n        return Cookie.deleteCookie(options.key);\n      });\n      return function (_x11) {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n    /**\n     * Clears out cookies by setting them to expire immediately\n     */\n    this.clearCookies = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator(function* (\n      // @ts-ignore\n      options) {\n        return Cookie.clearCookies();\n      });\n      return function (_x12) {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n    /**\n     * Clears out cookies by setting them to expire immediately\n     */\n    this.clearAllCookies = /*#__PURE__*/_asyncToGenerator(function* () {\n      return Cookie.clearCookies();\n    });\n    /**\n     * Uploads a file through a POST request\n     * @param options TODO\n     */\n    this.uploadFile = /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator(function* (options) {\n        const formData = new FormData();\n        formData.append(options.name, options.blob || 'undefined');\n        const fetchOptions = Object.assign(Object.assign({}, options), {\n          body: formData,\n          method: 'POST'\n        });\n        return _this.post(fetchOptions);\n      });\n      return function (_x13) {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n    /**\n     * Downloads a file\n     * @param options TODO\n     */\n    this.downloadFile = /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator(function* (options) {\n        const requestInit = Request.buildRequestInit(options, options.webFetchExtra);\n        const response = yield fetch(options.url, requestInit);\n        let blob;\n        if (!(options === null || options === void 0 ? void 0 : options.progress)) blob = yield response.blob();else if (!(response === null || response === void 0 ? void 0 : response.body)) blob = new Blob();else {\n          const reader = response.body.getReader();\n          let bytes = 0;\n          let chunks = [];\n          const contentType = response.headers.get('content-type');\n          const contentLength = parseInt(response.headers.get('content-length') || '0', 10);\n          while (true) {\n            const {\n              done,\n              value\n            } = yield reader.read();\n            if (done) break;\n            chunks.push(value);\n            bytes += (value === null || value === void 0 ? void 0 : value.length) || 0;\n            const status = {\n              type: 'DOWNLOAD',\n              url: options.url,\n              bytes,\n              contentLength\n            };\n            _this.notifyListeners('progress', status);\n          }\n          let allChunks = new Uint8Array(bytes);\n          let position = 0;\n          for (const chunk of chunks) {\n            if (typeof chunk === 'undefined') continue;\n            allChunks.set(chunk, position);\n            position += chunk.length;\n          }\n          blob = new Blob([allChunks.buffer], {\n            type: contentType || undefined\n          });\n        }\n        return {\n          blob\n        };\n      });\n      return function (_x14) {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n  }\n}","map":{"version":3,"names":["WebPlugin","Cookie","Request","HttpWeb","constructor","request","options","get","post","put","patch","del","getCookiesMap","cookies","getCookies","output","cookie","key","value","url","setCookie","expires","path","getCookie","deleteCookie","clearCookies","clearAllCookies","uploadFile","formData","FormData","append","name","blob","fetchOptions","Object","assign","body","method","downloadFile","requestInit","buildRequestInit","webFetchExtra","response","fetch","progress","Blob","reader","getReader","bytes","chunks","contentType","headers","contentLength","parseInt","done","read","push","length","status","type","notifyListeners","allChunks","Uint8Array","position","chunk","set","buffer","undefined"],"sources":["/Users/erisveltonlima/Desktop/Projetos 2023/criancaFeliz2023/node_modules/@capacitor-community/http/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport * as Cookie from './cookie';\nimport * as Request from './request';\nexport class HttpWeb extends WebPlugin {\n    constructor() {\n        super();\n        /**\n         * Perform an Http request given a set of options\n         * @param options Options to build the HTTP request\n         */\n        this.request = async (options) => Request.request(options);\n        /**\n         * Perform an Http GET request given a set of options\n         * @param options Options to build the HTTP request\n         */\n        this.get = async (options) => Request.get(options);\n        /**\n         * Perform an Http POST request given a set of options\n         * @param options Options to build the HTTP request\n         */\n        this.post = async (options) => Request.post(options);\n        /**\n         * Perform an Http PUT request given a set of options\n         * @param options Options to build the HTTP request\n         */\n        this.put = async (options) => Request.put(options);\n        /**\n         * Perform an Http PATCH request given a set of options\n         * @param options Options to build the HTTP request\n         */\n        this.patch = async (options) => Request.patch(options);\n        /**\n         * Perform an Http DELETE request given a set of options\n         * @param options Options to build the HTTP request\n         */\n        this.del = async (options) => Request.del(options);\n        /**\n         * Gets all HttpCookies as a Map\n         */\n        this.getCookiesMap = async (\n        // @ts-ignore\n        options) => {\n            const cookies = Cookie.getCookies();\n            const output = {};\n            for (const cookie of cookies) {\n                output[cookie.key] = cookie.value;\n            }\n            return output;\n        };\n        /**\n         * Get all HttpCookies as an object with the values as an HttpCookie[]\n         */\n        this.getCookies = async (options) => {\n            // @ts-ignore\n            const { url } = options;\n            const cookies = Cookie.getCookies();\n            return { cookies };\n        };\n        /**\n         * Set a cookie\n         * @param key The key to set\n         * @param value The value to set\n         * @param options Optional additional parameters\n         */\n        this.setCookie = async (options) => {\n            const { key, value, expires = '', path = '' } = options;\n            Cookie.setCookie(key, value, { expires, path });\n        };\n        /**\n         * Gets all cookie values unless a key is specified, then return only that value\n         * @param key The key of the cookie value to get\n         */\n        this.getCookie = async (options) => Cookie.getCookie(options.key);\n        /**\n         * Deletes a cookie given a key\n         * @param key The key of the cookie to delete\n         */\n        this.deleteCookie = async (options) => Cookie.deleteCookie(options.key);\n        /**\n         * Clears out cookies by setting them to expire immediately\n         */\n        this.clearCookies = async (\n        // @ts-ignore\n        options) => Cookie.clearCookies();\n        /**\n         * Clears out cookies by setting them to expire immediately\n         */\n        this.clearAllCookies = async () => Cookie.clearCookies();\n        /**\n         * Uploads a file through a POST request\n         * @param options TODO\n         */\n        this.uploadFile = async (options) => {\n            const formData = new FormData();\n            formData.append(options.name, options.blob || 'undefined');\n            const fetchOptions = Object.assign(Object.assign({}, options), { body: formData, method: 'POST' });\n            return this.post(fetchOptions);\n        };\n        /**\n         * Downloads a file\n         * @param options TODO\n         */\n        this.downloadFile = async (options) => {\n            const requestInit = Request.buildRequestInit(options, options.webFetchExtra);\n            const response = await fetch(options.url, requestInit);\n            let blob;\n            if (!(options === null || options === void 0 ? void 0 : options.progress))\n                blob = await response.blob();\n            else if (!(response === null || response === void 0 ? void 0 : response.body))\n                blob = new Blob();\n            else {\n                const reader = response.body.getReader();\n                let bytes = 0;\n                let chunks = [];\n                const contentType = response.headers.get('content-type');\n                const contentLength = parseInt(response.headers.get('content-length') || '0', 10);\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done)\n                        break;\n                    chunks.push(value);\n                    bytes += (value === null || value === void 0 ? void 0 : value.length) || 0;\n                    const status = {\n                        type: 'DOWNLOAD',\n                        url: options.url,\n                        bytes,\n                        contentLength,\n                    };\n                    this.notifyListeners('progress', status);\n                }\n                let allChunks = new Uint8Array(bytes);\n                let position = 0;\n                for (const chunk of chunks) {\n                    if (typeof chunk === 'undefined')\n                        continue;\n                    allChunks.set(chunk, position);\n                    position += chunk.length;\n                }\n                blob = new Blob([allChunks.buffer], { type: contentType || undefined });\n            }\n            return {\n                blob,\n            };\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}